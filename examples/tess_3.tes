#version 440 core

layout(quads, equal_spacing, ccw) in;

out VertexData { vec4 position; vec4 tex_coord; vec4 color; mat4 transform; } tes;

#include "common.glsl"
#include "surfaces.glsl"
#include "uniforms.glsl"

subroutine uniform ParametricFunction surface_function;
uniform vec4 surface_parameters = vec4(1.0, 0.25, 20.0, 0.0);

void make_vertex(vec4 position, vec4 tex_coord, vec4 color, mat4 transform)
{
    tes.position = position;
    tes.tex_coord = tex_coord;
    tes.color = color;
    tes.transform = transform;
    gl_Position = view_projection * tes.position;
}

void main()
{
    vec2 coord = 2.0 * gl_TessCoord.st - 1.0;
    
    vec3 p0 = surface_function(coord, surface_parameters);
    vec3 p1 = surface_function(vec2(coord.s + M_EPS, coord.t), surface_parameters);
    vec3 p2 = surface_function(vec2(coord.s, coord.t + M_EPS), surface_parameters);
    
    vec4 tex_coord = vec4(gl_TessCoord.st, 0.0, 1.0);
    mat4 transform = mat4(basis_from_points(p0, p1, p2));
    
    make_vertex(vec4(p0, 1.0), tex_coord, vec4(1.0), transform);
}